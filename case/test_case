url: https://api.kikakeyboard.com/v1/stickers2/popup?
cycle_times: 1
#web0
#url: http://sticker.pre.kikakeyboard.com/backend-content-sending/popup?
#test3
#url: http://52.43.155.219:9090/backend-content-sending/popup?
keys: ['kb_lang','tag','duid']
data:
  app: ['kika','ikey','pro']
#  app: ['ikey']
  kb_lang : ['en_US', 'en_AU', 'es_AR', 'pt_BR','in_ID','fr']
#  kb_lang : ['en_US', 'en_AU']
  tag : ['ok']
  duid : ['5a215835df204115ee3d2d4ec0c528aa', 'adad79631d9339915e3be1c9e783e82d', 'a2bb5434f3541bf5aa64186ec8c2b77f',
          '920b56e9cadd743bfbbcb4126937e789']
  # 算法duid
#  duid : ['1cbea45d00704178ed555e8cd12a4f3b', 'c500d24e6f79ea93de3fe8eb7c420f0a', '8f9e30b328b3fa3f07fc7eaefff1a16e',
#          'd3aba2d3052aa2a9aaeaa4273c8859a0']
# version可以通过对指定对象配置版本，最后一个&后填写版本之前的都是条件用&分隔
#  version: ['ikey&920b56e9cadd743bfbbcb4126937e789&1478']
  version: ['ikey&d3aba2d3052aa2a9aaeaa4273c8859a0&1478']
assert:
#  返回码(只能第一层)
  code : {'key':'errorCode','value':0}
#  字段格式
# 多个返回可能的时候使用&连接可能性，使用@@@进行字段胡洛
# 返回内容如果是个多级字段则为前置条件条件各级用&连接
  data_format : {
    '{"data&type":"sticker"}':{'data': {'popup_duration': 'Int', 'stickers': [{'package_id': 'Str&$$$', 'tags': ['@@@'], 'scale_type': 'Int', 'source_text': 'Str&$$$', 'mp4': '$$$', 'name': '$$$', 'popup_duration': 'Int', 'icon_url': 'Str&$$$', 'image': {'height': 'Int', 'width': 'Int', 'url': 'Str'}, 'mark': 'Str', 'key': 'Str'}], 'magics': '$$$', 'extra': '@@@', 'type': 'Str'}, 'errorCode': 'Int', 'errorMsg': 'Str'},
    '{"data&type":"magic"}':{'data': {'type': 'Str', 'magics': [{'key': 'Str', 'style': 'Str'}], 'stickers': '$$$', 'popup_duration': 'Int', 'extra': 'Str'}, 'errorMsg': 'Str', 'errorCode': 'Int'}
    }
# 数据检查
# 前面的值是对应的维度，后面的字典内容({"key":"value"}key是对应值的路径，value是对应应该出现的值(如果值添加问#那么只坚持对应结构是否存在忽略其具体值）
# 填写内容验证遵守json格式，数据使用""
# 可以使用条件进行判断
# eg:'ikey&920b56e9cadd743bfbbcb4126937e789':'{"data&popup_duration":"5000"}${"data&popup_duration":"4000"}'
# 维度为'ikey&920b56e9cadd743bfbbcb4126937e789'时且满足"data&popup_duration"对应字段等于5000是才进行{"data&popup_duration":"4000"}'判断
# 在维度上有字段重复的时候使用"@数字"的形势进行区分
# 多可能结果 eg:'ikey&920b56e9cadd743bfbbcb4126937e789':'{"data&popup_duration":"4000&500"}
  data_content : {
                  # ikey sticker和magic展示时间判断
                  'ikey@1':'{"data&type":"sticker"}${"data&popup_duration":"5000"}',
                  'ikey@2':'{"data&type":"magic"}${"data&popup_duration":"0"}',
                  # ikey1477以下版本不支持magic
                  'ikey&1477':'{"data&type":"sticker"}',
                  'ikey&1478':'{"data&type":"magic&sticker"}',
                  # kika pro 展示时间判断
                  'kika':'{"data&stickers&0&popup_duration":"5000"}',
                  'pro':'{"data&stickers&0&popup_duration":"5000"}'
                  }
# response_header检查
# 可根据前面的条件检查，条件能够用&关联
  response_header : {
#                    kika: {Cache-Control: "max-age=28800"},
#                    pro: {Cache-Control: "max-age=28800"}
                    }
other:
  way: online
  host :

